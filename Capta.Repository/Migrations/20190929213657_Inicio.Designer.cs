// <auto-generated />
using System;
using Capta.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capta.Repository.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190929213657_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099");

            modelBuilder.Entity("Capta.Domain.Habilidade", b =>
                {
                    b.Property<int>("HabilidadeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("HabilidadeId");

                    b.ToTable("Habilidades");
                });

            modelBuilder.Entity("Capta.Domain.Jogador", b =>
                {
                    b.Property<int>("JogadorId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Altura");

                    b.Property<string>("Nome");

                    b.Property<decimal>("Peso");

                    b.Property<int?>("TimeId");

                    b.HasKey("JogadorId");

                    b.HasIndex("TimeId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Capta.Domain.JogadorHabilidade", b =>
                {
                    b.Property<int>("HabilidadeId");

                    b.Property<int>("JogadorId");

                    b.Property<int>("Capacidade");

                    b.HasKey("HabilidadeId", "JogadorId");

                    b.HasIndex("JogadorId");

                    b.ToTable("JogadoresHabilidades");
                });

            modelBuilder.Entity("Capta.Domain.Time", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Forca");

                    b.Property<string>("Nome");

                    b.HasKey("TimeId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Capta.Domain.Jogador", b =>
                {
                    b.HasOne("Capta.Domain.Time")
                        .WithMany("Jogadores")
                        .HasForeignKey("TimeId");
                });

            modelBuilder.Entity("Capta.Domain.JogadorHabilidade", b =>
                {
                    b.HasOne("Capta.Domain.Habilidade", "Habilidade")
                        .WithMany("JogadorHabilidades")
                        .HasForeignKey("HabilidadeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capta.Domain.Jogador", "Jogador")
                        .WithMany("JogadorHabilidades")
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
